@model List<ResourceModel>
@*
    Descripción
    -----------------------------------------------
    Vista modal que servirá para ver el historial de un recurso. Se mostrará cuando en la ficha del recurso, se pulse sobre "Historial" o "Ver historial".
    * Atención: * Solo es necesario mostrar el contenido del modal ya que es cargado de forma dinámica mediante petición AJAX realizada al FichaRecursoController.

    Variables
    ----------------------------------------------------------------
*@
@{
    ResourceModel DocActual = Model.OrderByDescending(recurso => recurso.Version).First();
    // Contador para recorrer las versiones del documento y pintarlas
    int cont = 0;
}

@*
    ----------------------------------------------------------------
    -------------------- Vista Modal ver el historial de un Recurso --------------------
*@

<div class="modal-header">
    <p class="modal-title">
        <span class="material-icons">dns</span>@Html.GetText("COMPARARVERSIONES", "HISTORIAL")
    </p>
    <span class="material-icons cerrar"
          data-dismiss="modal"
          aria-label="Close">close</span>
</div>
<div class="modal-body">
    <div class="formulario-edicion">
        @* Mostrar título, y fecha del recurso*@
        <div class="header-resource">
            <div class="title-wrap">
                <p class="title">@DocActual.Title</p>
            </div>
            <div class="upper-wrap">
                <div class="user-miniatura">
                    <div class="nombre-usuario-wrap">
                        @* <p class="nombre-completo">@DocActual.Publisher.NamePerson - @DocActual.Publisher.NameOrganization</p> *@
                        <p class="nombre-completo">@DocActual.Publisher.NamePerson</p>
                    </div>
                </div>
                <p class="fecha">@DocActual.PublishDate</p>
            </div>
        </div>

        @* Tabla con las versiones de los documentos  *@
        <table class="display nowrap table table-sm tabla-versiones" id="panHistorial_table">
            <thead>
                <tr>
                    @if (DocActual.TypeDocument != ResourceModel.DocumentType.Semantico)
                    {
                        <th></th>
                    }
                    <th scope="col">@Html.GetText("HISTORIALVERSIONES", "VERSION")</th>
                    <th scope="col">@Html.GetText("HISTORIALVERSIONES", "HORA")</th>
                    <th scope="col">@Html.GetText("HISTORIALVERSIONES", "FECHA")</th>
                    <th scope="col">@Html.GetText("HISTORIALVERSIONES", "EDITOR")</th>
                    <th scope="col">@Html.GetText("ADMINISTRACIONBASICA", "ACCIONES")</th>
                    @if (DocActual.TypeDocument == ResourceModel.DocumentType.FicheroServidor)
                    {
                        <th scope="col">@Html.GetText("HISTORIALVERSIONES", "DESCARGAR")</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (ResourceModel doc in Model.OrderByDescending(recurso => recurso.Version))
                {
                    <tr>
                        @* Columnas de DataTables*@
                        @* INPUT CHECKBOX *@
                        @if (DocActual.TypeDocument != ResourceModel.DocumentType.Semantico)
                        {
                            <td class="align-middle">
                                <div class="check-wrapper">
                                    <div class="custom-control custom-checkbox">
                                        <input style="z-index:9999" type="checkbox" class="custom-control-input" onclick="ComprobarChecks(this);" id="@doc.Key">
                                        <label class="custom-control-label" for="version3"></label>
                                    </div>
                                </div>
                            </td>
                        }
                        @* VERSION *@
                        <td class="align-middle"><a href="@doc.VersionCardLink">@doc.Version</a></td>
                        @* HORA *@
                        <td class="align-middle">@doc.PublishDate.ToString("HH:mm")</td>
                        @* FECHA *@
                        <td class="align-middle">@doc.PublishDate.ToString("dd/MM/yyyy")</td>
                        @* AUTOR *@
                        <td class="align-middle">@doc.Publisher.NamePerson</td>
                        @* ACCIONES*@
                        <td class="align-middle">
                            @if (doc.Key == DocActual.Key)
                            {
                                @Html.GetText("HISTORIALVERSIONES", "VERSIONACTUAL")
                            }
                            else
                            {
                                <div class="dropdown">
                                    <a class="btn btn-outline-grey"
                                       data-toggle="dropdown"
                                       href="#"
                                       role="button"
                                       aria-haspopup="true"
                                       aria-expanded="false">
                                        <span class="material-icons">more_vert</span>
                                        <span class="texto">@Html.GetText("ADMINISTRACIONBASICA", "ACCIONES")</span>
                                    </a>
                                    <div class="dropdown-menu basic-dropdown dropdown-icons dropdown-menu-right"
                                         style="will-change: transform">
                                        <a class="item-dropdown" style="text-decoration:none; color:inherit" onclick="DesplegarRestaurar(this, '@doc.ListActions.UrlLoadActionRestoreVersion', '@doc.Key.ToString()')">
                                            <span class="material-icons">replay</span>
                                            <span class="texto">@Html.GetText("HISTORIALVERSIONES", "RESTAURAR")</span>
                                        </a>
                                        <a class="item-dropdown" style="text-decoration:none; color:inherit" onclick="DesplegarEliminar(this, '@doc.ListActions.UrlLoadActionDeleteVersion', '@doc.Key.ToString()')">
                                            <span class="material-icons">delete</span>
                                            <span class="texto">@Html.GetText("DEVTOOLS", "BORRAR")</span>
                                        </a>
                                    </div>
                                </div>
                            }
                        </td>
                        @* DESCARGAR *@
                        @if (DocActual.TypeDocument == ResourceModel.DocumentType.FicheroServidor)
                        {
                            <td><a href="@doc.UrlPreview">@Html.GetText("HISTORIALVERSIONES", "DESCARGAR")</a></td>
                        }
                    </tr>
                    cont++;
                }
            </tbody>
        </table>

        @* Confirmación de Restaurar *@
        <div class="confirmRestaurar">
            <div style="display: none;" class="stateShowForm" id="panels">
                <div class="loading" id="loading" style="display: none;">
                    <p><span class="spinner-border mr-2 texto-primario"></span>Cargando formulario, un momento por favor</p>
                </div>
                <div class="box form activeForm" id="action" style="display: block;">
                    <div id="panAccionDoc">
                    </div>
                </div>
            </div>
        </div>

        @* Acciones a realizar *@
        @if (DocActual.TypeDocument != ResourceModel.DocumentType.Semantico)
        {
            <div class="form-actions">
                <a onclick="DesplegarComparar(event)" class="btn btn-primary uppercase" data-target="#modal-comparar-versiones" data-toggle="modal">@Html.GetText("HISTORIALVERSIONES", "COMPARAR")</a>
            </div>
        }

        @* Panel donde se mostrará la comparación de Versiones*@
        <div style="display:none" id="despleCompVer">
            <div style="display: block;" class="stateShowForm" id="panels">
                <div class="box form activeForm" id="action" style="display: block;">
                    <div id="panDiffDoc"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Mensaje informativo del proceso*@
<div id="despAccionRec_@DocActual.Key">
    <div>
        <div id="menssages">
            <div class="ok"></div>
            <div class="ko"></div>
        </div>
    </div>
</div>

@* Panel donde se mostrará el Despliegue *@
<div id='despAccionRec_history' style="display:none">
</div>

@* Input oculto para guardar los ids de los checks chequeados *@
<input type="hidden" id="txtHackCheckSeleccionados" />


<script>
    function DesplegarRestaurar(boton, url, id)
    {
        var panelID = 'despAccionRec_history';

        $('.confirmRestaurar').attr('id', panelID);
        $('#cerrarConfirmRestaurar').attr('onclick', 'CerrarPanelAccion(\'' + panelID + '\')');

        DesplegarAccionMVC(url, boton, panelID, '');
    }

    function DesplegarEliminar(boton, url, id)
    {
        var panelID = 'despAccionRec_history';

        $('.confirmRestaurar').attr('id', panelID);
        $('#cerrarConfirmRestaurar').attr('onclick', 'CerrarPanelAccion(\'' + panelID + '\')');

        DesplegarAccionMVC(url, boton, panelID, '');
    }

    function DesplegarComparar(event)
    {
        if(numChecksActivos != 2) {
            event.preventDefault();
            event.stopPropagation();
            mostrarNotificacion("error","¡Debes elegir 2 versiones para comparar!");
            $("#modal-comparar-versiones").modal("hide");
            return;
        }
        MostrarUpdateProgress();
        var dataPost = {
            documentosComparar: $('#txtHackCheckSeleccionados').val()
        }

        GnossPeticionAjax('@Html.GetUrlPagina()/compare', dataPost, true)
        .done(function (data) {
            $("#modal-container").modal("hide");
            $('#modal-comparar-versiones-content').html(data);
            // calcHeightModalComparar.init();
        }).fail(function(data){
            mostrarNotificacion("error", data);
        }).always(function(){
            OcultarUpdateProgress();
        });
    }

    var numChecksActivos = 0;
    VaciarChecks();

    function ComprobarChecks(check) {
        var textBoxHack = $('#txtHackCheckSeleccionados');
        var input = $('#panHistorial_table input');
        numChecksActivos = 0;
        for (var i = 0; i < input.length; i++) {
            if (input[i].checked == true) {
                numChecksActivos++;
            }
        }
        if ($(check).is(':checked')) {
            textBoxHack.val(textBoxHack.val() + '&' + $(check).attr('id'));
            if (numChecksActivos > 2) {
                $(check).prop('checked', false);
                textBoxHack.val(textBoxHack.val().replace('&' + $(check).attr('id'), ''));
                return false;
            }
        }
        else {
            textBoxHack.val(textBoxHack.val().replace('&' + $(check).attr('id'), ''));
        }
        return false;
    }
    function VaciarChecks()
    {
        $('#txtHackCheckSeleccionados').val('');
        var input = $('#panHistorial_table input');

        for (var i = 0; i < input.length; i++) {
            $(input[i]).prop('checked', false);
        }
    }
</script>



