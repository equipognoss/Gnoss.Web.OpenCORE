@model DatoExtraModel
@*
Descripción
-----------------------------------------------
Vista parcial para el pintado de cada Dato extra

Variables
----------------------------------------------------------------
*@

@{
    // Establecer en el ViewBag el idioma por defecto
    string idiomaPorDefecto = ViewBag.IdiomaPorDefecto;
    HeaderModel cabecera = Html.GetCabecera();
    string urlEdit = "";
    string obligatorio = Model.Obligatorio ? "Sí" : "No";
    string visible = Model.VisibleEnPerfil ? "Sí" : "No";
    Dictionary<string, string> clausulaDescriptionDictionary = new Dictionary<string, string>();
    DatoExtraEditModel editModel = new DatoExtraEditModel();
    editModel.Nombre = Model.Nombre;
    editModel.DatoExtraID = Model.DatoExtraID;
    editModel.Obligatorio = Model.Obligatorio;
    editModel.Opciones = Model.Opciones;
    editModel.Tipo = Model.Tipo;
    editModel.PredicadoRDF = Model.PredicadoRDF;
}
@{
    // Obtener descripción/contenido de la cláusula en formato diccionario con los multiIdiomas para ser mostrados en la row de la cláusula
    clausulaDescriptionDictionary = Html.GetDictionaryValuesFromMultiLanguageItem(Model.Nombre);
}
@*
----------------------------------------------------------------
-------------------- Vista parcial para cada traducción --------------------
*@

@* Componente de dato extra *@
<li class="component-header-wrap component-wrap translate-row">
    <div class="component-header">
        <div class="component-header-content">
            <div class="component-header-left">
                <div class="component-name-wrap">
                    @foreach (KeyValuePair<string, string> idioma in cabecera.Languajes)
                    {
                        <span class="language-component component-name @( idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key">
                            @* Asegurarnos de que haya valor en el dictionary. Si no, dejarlo en blanco *@
                            @{
                                string value = "";
                                if (clausulaDescriptionDictionary.TryGetValue(idioma.Key, out value))
                                {
                                    @* Html.CleanHtmlParagraphsStringHtml(@value);*@
                                    var valueFormatted = Html.CleanHtmlParagraphsStringHtml(value);
                                    valueFormatted = Html.CleanHtmlFromMultimediaItems(valueFormatted);
                                    valueFormatted = UtilCadenas.HtmlDecode(valueFormatted);
                                    @valueFormatted
                                    ;
                                    @* @value *@
                                }
                            }
                        </span>
                    }
                    @*<span class="component-shortname">@Model.Nombre</span>*@
                </div>
                <div class="component-shortname-wrap">
                    <span class="component-shortname">@Model.NombreCorto</span>
                </div>
                <input type="hidden" value="@Model.DatoExtraID" name="hack_dato_editar" />
                <div class="component-tipo-wrap">
                    <span class="component-tipo">@Model.Tipo</span>
                </div>
                <div class="component-orden-wrap">
                    <span class="component-orden">@Model.Orden</span>
                </div>
                <div class="component-predicado-wrap">
                    <span class="component-predicado">@Model.PredicadoRDF</span>
                </div>
                <div class="component-obligatorio-wrap">
                    <span class="component-obligatorio">@obligatorio</span>
                </div>
                <div class="component-visible-wrap">
                    <span class="component-visible">@visible</span>
                </div>
            </div>
            @* Acciones del dato extra *@
            <div class="component-header-right">
                <div class="component-actions-wrap">
                    <ul class="no-list-style component-actions">
                        <li>
                            @* Editar dato extra - Edición vía Modal *@
                            <a class="action-edit round-icon-button js-action-edit-component btnEditExtraData"
                               data-urledit="@urlEdit"
                               data-target="#modal-container"
                               data-toggle="modal" id="@Model.DatoExtraID">
                                <span class="material-icons">edit</span>
                            </a>
                        </li>
                        <li>
                            @* Eliminar dato extra *@
                            <a class="action-delete round-icon-button js-action-delete btnDeleteExtraData"
                               data-target="#modal-delete-extra-data"
                               data-translate-id="@Model.Nombre"
                               data-toggle="modal">
                                <span class="material-icons">delete</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</li>
@*@Html.PartialView("_modal-views/_delete-extra-data", Model.DatoExtraID)*@