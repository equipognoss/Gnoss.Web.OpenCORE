@model ContextoModel

@*
Descripción
-----------------------------------------------
Vista para administrar/visualizar cada una de las filas o rows de los contextos existentes en la comunidad. Contendrá también el modal para su visualización en detalle.

Variables
----------------------------------------------------------------
*@
@{

	// Nombre del tipo de contexto/gadget
	string nombreTipoGadget = "";
    // Cabecera para obtención de idiomas de la Comunidad
    HeaderModel cabecera = Html.GetCabecera();
    // Diccionario de nombre de la faceta para multiIdiomas
    Dictionary<string, string> contextoNameDictionary = new Dictionary<string, string>();
    // Id para la llamada al modal para edición de la faceta
    string idModalContexto = "modal-configuracion-contexto_" + @Model.Key;	
	// Idioma por defecto de la comunidad
	string idiomaPorDefecto = ViewBag.IdiomaPorDefecto;
}

@{
	@* Controlar el tipo de Contexto *@

    nombreTipoGadget = Model.TipoGadget.ToString();
    switch (Model.TipoGadget)
    {
        case TipoGadget.HtmlIncrustado:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADHTML");
            break;
        case TipoGadget.UltPreguntas:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADULTPREGUNTAS");
            break;
        case TipoGadget.UltDebates:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADULTDEBATES");
            break;
        case TipoGadget.UltEncuestas:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADULTENCUESTAS");
            break;
        case TipoGadget.Consulta:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADCONSULTA");
            break;
        case TipoGadget.ProyRelacionados:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADPROYRELACIONADOS");
            break;
        case TipoGadget.QueEstaPasando:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADQUEESTAPASANDO");
            break;
        case TipoGadget.RecursosContextos:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADCONTEXTO");
            break;
        case TipoGadget.RecursosRelacionados:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADRECURSOSRELACIONADOS");
            break;
        case TipoGadget.CMS:
            nombreTipoGadget = Html.GetText("COMADMINCONTEXTOS", "TIPOGADCMS");
            break;
	}

}

@* Construir los diferentes items en idiomas (Nombre) *@
@{
	// Obtener el nombre formato diccionario con los multiIdiomas de Nombre para ser mostrados en la row de la faceta
	contextoNameDictionary = Html.GetDictionaryValuesFromMultiLanguageItem(Model.Name);	
}

<li class="component-wrap contexto-row" id="@Model.Key">
	<div class="component">
		<div class="component-header-wrap">
			<div class="component-header">
				@* Icono para arrastrar faceta *@
				<div class="component-sortable js-component-sortable-contexto">
					<span class="material-icons-outlined sortable-icon">drag_handle</span>
				</div>
				<div class="component-header-content">
					<div class="component-header-left">						
						<div class="component-name-wrap">							
							@* Nombre del contexto *@
							@* Recorrer los idiomas existentes y crear los datos para Nombre del contexto *@
							@if (contextoNameDictionary.Count == 0)
							{
								<span class="language-component component-name @(idiomaPorDefecto)" data-languageitem="@idiomaPorDefecto">
									@Model.Name
								</span>
							}
							else
							{														
								@foreach (KeyValuePair<string, string> idioma in cabecera.Languajes)
									{																												
									<span class="language-component component-name @( idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key">																	
										@* Asegurarnos de que haya valor en el dictionary. Si no, dejarlo en blanco *@																										
										@{
											string value = "";
											if (contextoNameDictionary.TryGetValue(idioma.Key, out value))
											{
												@value;
											}										
										}
									</span>
								}	
							}							
						</div>
						@* Tipo de contexto *@
						<div class="component-tipo-wrap">							
							<span class="component-tipo">								
								@nombreTipoGadget
							</span>
							
						</div>						
						@* Información: Fecha última actualización *@
						<div class="component-fecha-wrap">
							<span class="component-fecha">05/10/2022</span>
						</div>
					</div>
					@*Sección de acciones del contexto *@
					<div class="component-header-right">
						<div class="component-actions-wrap">
							@* Botón dropdown de acciones *@
							<div class="dropdown">
								<a
									class="nav-link dropdown-toggle btn btn-outline-grey"
									data-toggle="dropdown"
									href="#"
									role="button"
									aria-haspopup="true"
									aria-expanded="false">
									<span class="material-icons">create</span>
									<span class="texto">Editar</span>
								</a>
								@* Panel dropdown con las acciones disponibles *@
								<div class="dropdown-menu dropdown-menu-left basic-dropdown">
									<ul class="no-list-style">
										@* Editar faceta *@
										<li>
											<a class="item-dropdown js-action-edit-component btnEditContexto"
											   data-toggle="modal" 
											   data-target="#@idModalContexto">
												<span class="material-icons">create</span>
												<span class="texto">@Html.GetText("DEVTOOLS","EDITARCONTEXTO")</span>
											</a>
										</li>

										@* Eliminar faceta *@
										<li>
											<a class="item-dropdown js-action-delete-component btnDeleteContexto"
											   data-toggle="modal" 
											   data-target="#modal-delete-contexto">
												<span class="material-icons">delete</span>
												<span class="texto">@Html.GetText("COMMON","ELIMINAR")</span>
											</a>
										</li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>

	@* Información detallada de la faceta -> Modal *@
	@Html.PartialView("_modal-views/_contexto-item-detail", Model)

</li>