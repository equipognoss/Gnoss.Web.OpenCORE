@model AdministrarComunidadUtilidades

@*
Descripción
-----------------------------------------------
Vista para mostrar cada una de las opciones para configurar los permisos de recursos en la comunidad.

Variables
----------------------------------------------------------------
*@

@{
    CommunityModel Comunidad = Html.GetComunidad();
    // Url para realizar la petición para mostrar la vista modal de "Añadir grupos" para establecer permisos a un tipo de recurso
    string urlModalAddGroups = $"{@Comunidad.Url}/{@Html.GetText("URLSEM", "ADMINISTRARCOMUNIDADUTILIDADES")}/load-add-groups" ;
    bool secundariasPintadas = false;
}

@*
----------------------------------------------------------------
-------------------- Vista para Mostrar los diferentes recursos y definir los permisos --------------------
*@

@* Tabla de contenido de permisos *@
<table id="tablaPermisos" class="display nowrap table table-sm tabla-permisos">
    @*Cabecera de la tabla con títulos: Contenidos, Permisos para, Acciones *@
    <thead>
        <tr>
            <th>@Html.GetText("COMADMIN", "TIPO")</th>
            <th>@Html.GetText("COMADMIN", "DISPONIBLEPARA")</th>
            <th>@Html.GetText("ADMINISTRACIONBASICA","ACCIONES")</th>
        </tr>
    </thead>
    <tbody>
        @* Fila de tipo servidor *@
        <tr id="FicheroServidor" class="permiso">
            @* Controlar las opciones para Tipo Servidor *@
            @{
                bool tipoArchivo = false;
                bool tipoVideo = false;
                bool tipoImagen = false;
                int permisosArchivoDigital = -1;

                if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.FicheroServidor) > 0)
                {
                    tipoArchivo = true;
                    permisosArchivoDigital = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.FicheroServidor).TipoPermiso;
                }
                else if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Video) > 0)
                {
                    tipoVideo = true;
                    permisosArchivoDigital = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Video).TipoPermiso;
                }
                else if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Imagen) > 0)
                {
                    tipoImagen = true;
                    permisosArchivoDigital = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Imagen).TipoPermiso;
                }
            }
            @* Columna de Tipo de Recurso *@
            <td>
                @* Tipo de recurso*@
                <div class="form-group">
                    @* Nombre del tipo de recurso*@
                    <label class="control-label d-block">@Html.GetText("COMADMIN", "ARCHIVO")</label>
                    @* Opciones según el tipo de recurso*@
                    @* Cualquier tipo *@
                    <div class="form-check form-check-inline">
                        <input id="radioButtonCualquier"
                               class="form-check-input"
                               type="radio"
                               @Html.Raw(tipoArchivo ? "checked=\"checked\"" : "") 
                               value="FicheroServidor" 
                               name="tipoArchivo"  />

                        <label class="form-check-label" 
                               for="radioButtonCualquier">
                               @Html.GetText("COMADMIN", "CUALQUIERTIPO")
                        </label>
                    </div>
                    @* Sólo vídeos *@
                    <div class="form-check form-check-inline">
                        <input id="radioButtonVideos"
                               class="form-check-input"
                               type="radio"
                               @Html.Raw(tipoVideo ? "checked=\"checked\"" : "")
                               value="Vídeo" 
                               name="tipoArchivo"  />

                        <label class="form-check-label" 
                               for="radioButtonVideos">
                               @Html.GetText("COMADMIN", "VIDEOS")
                        </label>

                    </div>
                    @* Sólo imágenes *@
                    <div class="form-check form-check-inline">
                        <input id="radioButtonImagenes"
                               class="form-check-input"
                               type="radio"
                               @Html.Raw(tipoImagen ? "checked=\"checked\"" : "")
                               value="Imagen" 
                               name="tipoArchivo"  />

                        <label class="form-check-label" 
                               for="radioButtonImagenes">
                               @Html.GetText("COMADMIN", "IMAGENES")
                        </label>
                    </div>
                </div>
            </td>
            @* Columna de Permisos para... *@
            <td>
                @* Opciones de los permisos para los diferentes tipos de usuario*@
                <div class="check-wrapper">
                    @* Usuario *@
                    <div class="custom-control custom-checkbox">                        
                        <input id="checkUsuarioArchivo" 
                               class="chkUsu custom-control-input" 
                               type="checkbox"
                               @Html.Raw(permisosArchivoDigital == 2 ? "checked=\"checked\"" : "") 
                               name="checkUsuarioArchivo" />
                        <label class="custom-control-label" 
                               for="checkUsuarioArchivo">@Html.GetText("COMADMIN", "USUARIO")
                        </label>
                    </div>
                    @* Supervisor *@
                    <div class="custom-control custom-checkbox">
                        <input id="checkSupervisorArchivo"                               
                               class="chkSup custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosArchivoDigital >= 1 ? "checked=\"checked\"" : "")
                               name="checkSupervisorArchivo"/>

                        <label class="custom-control-label" 
                               for="checkSupervisorArchivo">@Html.GetText("COMADMIN", "SUPERVISOR")
                        </label>                      
                    </div>
                    @* Administrador *@
                    <div class="custom-control custom-checkbox">

                        <input id="checkAdministradorArchivo"
                               class="chkAdm custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosArchivoDigital >= 0 ? "checked=\"checked\"" : "") 
                               name="checkAdministradorArchivo" />

                        <label class="custom-control-label"
                               for="checkAdministradorArchivo">
                               @Html.GetText("COMADMIN", "ADMINISTRADOR")
                        </label>
                    </div>
                </div>
            </td>
            @* Columna de Acciones para permisos a grupos específicos *@
            <td>

            </td>
        </tr>

        @* Fila Referencia a documento físico *@
        <tr id="ReferenciaADoc" class="permiso">
            @{
                int permisosReferenciaADoc = -1;
                if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.ReferenciaADoc) > 0)
                {
                    permisosReferenciaADoc = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.ReferenciaADoc).TipoPermiso;
                }
            }
            @* Referencia a documento físico *@
            <td>@Html.GetText("COMADMIN", "REFERENCIA")</td>
            <td>
                <div class="check-wrapper">
                    <div class="custom-control custom-checkbox">
                        <input id="checkUsuarioReferencia"
                               class="chkUsu custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosReferenciaADoc == 2 ? "checked=\"checked\"" : "") 
                               name="checkUsuarioReferencia" />

                        <label class="custom-control-label"
                               for="checkUsuarioReferencia">
                               @Html.GetText("COMADMIN", "USUARIO")
                        </label>                  
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkSupervisorReferencia"
                               class="chkSup custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosReferenciaADoc >= 1 ? "checked=\"checked\"" : "")
                               name="checkSupervisorReferencia" />

                        <label class="custom-control-label"
                               for="checkSupervisorReferencia">
                               @Html.GetText("COMADMIN", "SUPERVISOR")
                        </label>  
                        
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkAdministradorReferencia"
                               class="chkAdm custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosReferenciaADoc >= 0 ? "checked=\"checked\"" : "")
                               name="checkAdministradorReferencia" />

                        <label class="custom-control-label"
                               for="checkAdministradorReferencia">
                               @Html.GetText("COMADMIN", "ADMINISTRADOR")
                        </label>                         
                    </div>
                </div>
            </td>            
            @* Columna de Acciones para permisos a grupos específicos *@
            <td>               
            </td>            
        </tr>

        @* Fila Referencia a Hipervínculo *@
        <tr id="Hipervinculo" class="permiso">
            @{
                int permisosHipervinculo = -1;
                if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Hipervinculo) > 0)
                {
                    permisosHipervinculo = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Hipervinculo).TipoPermiso;
                }
            }
            @* Referencia a Hipervínculo/Dirección *@
            <td>@Html.GetText("COMADMIN", "DIRECCION")</td>
            <td>
                <div class="check-wrapper">
                    <div class="custom-control custom-checkbox">
                        <input id="checkUsuarioDirección"
                               class="chkUsu custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosHipervinculo == 2 ? "checked=\"checked\"" : "") 
                               name="checkUsuarioDirección" />

                        <label class="custom-control-label"
                               for="checkUsuarioDirección">
                               @Html.GetText("COMADMIN", "USUARIO")
                        </label>                  
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkSupervisorDireccion"
                               class="chkSup custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosHipervinculo >= 1 ? "checked=\"checked\"" : "")
                               name="checkSupervisorDireccion" />

                        <label class="custom-control-label"
                               for="checkSupervisorDireccion">
                               @Html.GetText("COMADMIN", "SUPERVISOR")
                        </label>                          
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkAdministradorDireccion"
                               class="chkAdm custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosHipervinculo >= 0 ? "checked=\"checked\"" : "")
                               name="checkAdministradorDireccion" />

                        <label class="custom-control-label"
                               for="checkAdministradorDireccion">
                               @Html.GetText("COMADMIN", "ADMINISTRADOR")
                        </label>                         
                    </div>
                </div>
            </td>
            @* Columna de Acciones para permisos a grupos específicos *@
            <td>               
            </td> 
        </tr>
        @* Fila Nota *@
        <tr id="Nota" class="permiso">
            @{
                int permisosNota = -1;
                if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Nota) > 0)
                {
                    permisosNota = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Nota).TipoPermiso;
                }
            }
            @* Referencia a Nota *@
            <td>@Html.GetText("COMADMIN", "NOTA")</td>
            <td>
                <div class="check-wrapper">
                    <div class="custom-control custom-checkbox">
                        <input id="checkUsuarioNota"
                               class="chkUsu custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosNota == 2 ? "checked=\"checked\"" : "")
                               name="checkUsuarioNota" />

                        <label class="custom-control-label"
                               for="checkUsuarioNota">
                               @Html.GetText("COMADMIN", "USUARIO")
                        </label>      
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkSupervisorNota"
                               class="chkSup custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosNota >= 1 ? "checked=\"checked\"" : "")
                               name="checkSupervisorNota" />

                        <label class="custom-control-label"
                               for="checkSupervisorNota">
                               @Html.GetText("COMADMIN", "SUPERVISOR")
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkAdministradorNota"
                               class="chkAdm custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosNota >= 0 ? "checked=\"checked\"" : "")
                               name="checkAdministradorNota" />

                        <label class="custom-control-label"
                               for="checkAdministradorNota">
                               @Html.GetText("COMADMIN", "ADMINISTRADOR")
                        </label>                                                  
                    </div>
                </div>
            </td>
            @* Columna de Acciones para permisos a grupos específicos *@
            <td>               
            </td> 
        </tr>
        
        @* Fila Pregunta *@
        <tr id="Pregunta" class="permiso">
            @{
                int permisosPregunta = -1;
                if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Pregunta) > 0)
                {
                    permisosPregunta = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Pregunta).TipoPermiso;
                }
            }
            @* Referencia a Pregunta *@
            <td>@Html.GetText("COMADMIN", "PREGUNTA")</td>
            <td>
                <div class="check-wrapper">
                    <div class="custom-control custom-checkbox">
                        <input id="checkUsuarioPregunta"
                               class="chkUsu custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosPregunta == 2 ? "checked=\"checked\"" : "")
                               name="checkUsuarioPregunta" />

                        <label class="custom-control-label"
                               for="checkUsuarioPregunta">
                               @Html.GetText("COMADMIN", "USUARIO")
                        </label>      
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkSupervisorPregunta"
                               class="chkSup custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosPregunta >= 1 ? "checked=\"checked\"" : "") 
                               name="checkSupervisorPregunta" />

                        <label class="custom-control-label"
                               for="checkSupervisorPregunta">
                               @Html.GetText("COMADMIN", "SUPERVISOR")
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkAdministradorPregunta"
                               class="chkAdm custom-control-input"
                               type="checkbox"                                
                               @Html.Raw(permisosPregunta >= 0 ? "checked=\"checked\"" : "")
                               name="checkAdministradorPregunta" />

                        <label class="custom-control-label"
                               for="checkAdministradorPregunta">
                               @Html.GetText("COMADMIN", "ADMINISTRADOR")
                        </label> 
                    </div>
                </div>
            </td>
            @* Columna de Acciones para permisos a grupos específicos *@
            <td>                    
            </td>            
        </tr>

        @* Fila Encuesta *@
        <tr id="Encuesta" class="permiso">
            @{
                int permisosEncuesta = -1;
                if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Encuesta) > 0)
                {
                    permisosEncuesta = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Encuesta).TipoPermiso;
                }
            }
            @* Referencia a Pregunta *@
            <td>@Html.GetText("COMADMIN", "ENCUESTA")</td>
            <td>
                <div class="check-wrapper">
                    <div class="custom-control custom-checkbox">
                        <input id="checkUsuarioEncuesta"
                               class="chkUsu custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosEncuesta == 2 ? "checked=\"checked\"" : "")
                               name="checkUsuarioEncuesta" />

                        <label class="custom-control-label"
                               for="checkUsuarioEncuesta">
                               @Html.GetText("COMADMIN", "USUARIO")
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkSupervisorEncuesta"
                               class="chkSup custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosEncuesta >= 1 ? "checked=\"checked\"" : "") 
                               name="checkSupervisorEncuesta" />

                        <label class="custom-control-label"
                               for="checkSupervisorEncuesta">
                               @Html.GetText("COMADMIN", "SUPERVISOR")
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkAdministradorEncuesta"
                               class="chkAdm custom-control-input"
                               type="checkbox"                                
                               @Html.Raw(permisosEncuesta >= 0 ? "checked=\"checked\"" : "")
                               name="checkAdministradorEncuesta" />

                        <label class="custom-control-label"
                               for="checkAdministradorEncuesta">
                               @Html.GetText("COMADMIN", "ADMINISTRADOR")
                        </label> 
                    </div>
                </div>
            </td>
            @* Columna de Acciones para permisos a grupos específicos *@
            <td>                    
            </td>
        </tr>

        @* Fila Debate *@
        <tr id="Debate" class="permiso">
            @{
                int permisosDebate = -1;
                if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Debate) > 0)
                {
                    permisosDebate = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Debate).TipoPermiso;
                }
            }
            @* Referencia a Pregunta *@
            <td>@Html.GetText("COMADMIN", "DEBATE")</td>
            <td>
                <div class="check-wrapper">
                    <div class="custom-control custom-checkbox">
                        <input id="checkUsuarioDebate"
                               class="chkUsu custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosDebate == 2 ? "checked=\"checked\"" : "")
                               name="checkUsuarioDebate" />

                        <label class="custom-control-label"
                               for="checkUsuarioDebate">
                               @Html.GetText("COMADMIN", "USUARIO")
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkSupervisorDebate"
                               class="chkSup custom-control-input"
                               type="checkbox" 
                               @Html.Raw(permisosDebate >= 1 ? "checked=\"checked\"" : "")
                               name="checkSupervisorDebate" />

                        <label class="custom-control-label"
                               for="checkSupervisorDebate">
                               @Html.GetText("COMADMIN", "SUPERVISOR")
                        </label>
                    </div>
                    <div class="custom-control custom-checkbox">
                        <input id="checkAdministradorDebate"
                               class="chkAdm custom-control-input"
                               type="checkbox"                                
                               @Html.Raw(permisosDebate >= 0 ? "checked=\"checked\"" : "")
                               name="checkAdministradorDebate" />

                        <label class="custom-control-label"
                               for="checkAdministradorDebate">
                               @Html.GetText("COMADMIN", "ADMINISTRADOR")
                        </label> 
                    </div>
                </div>
            </td>
            @* Columna de Acciones para permisos a grupos específicos *@
            <td>                    
            </td>
        </tr>

        @* Fila para TOPDisponible *@
        @if (ViewBag.TOPDisponible != null && ViewBag.TOPDisponible)
        {
            <tr id="VideoTOP" class="permiso">
                @{
                    int permisosTOP = -1;
                    if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.VideoTOP) > 0)
                    {
                        permisosTOP = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.VideoTOP).TipoPermiso;
                    }
                }
                @* Referencia a TopDisponible *@
                <td>@Html.GetText("COMADMIN", "VIDEOTOP")</td>
                <td>
                    <div class="check-wrapper">
                        <div class="custom-control custom-checkbox">
                            <input id="checkUsuarioTOP"
                                   class="chkUsu custom-control-input"
                                   type="checkbox" 
                                   @Html.Raw(permisosTOP == 2 ? "checked=\"checked\"" : "")
                                   name="checkUsuarioTOP" />

                            <label class="custom-control-label"
                                   for="checkUsuarioTOP">
                                   @Html.GetText("COMADMIN", "USUARIO")
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input id="checkSupervisorTOP"
                                   class="chkSup custom-control-input"
                                   type="checkbox" 
                                   @Html.Raw(permisosTOP >= 1 ? "checked=\"checked\"" : "")
                                   name="checkSupervisorTOP" />

                            <label class="custom-control-label"
                                   for="checkSupervisorTOP">
                                   @Html.GetText("COMADMIN", "SUPERVISOR")
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input id="checkAdministradorTOP"
                                   class="chkAdm custom-control-input"
                                   type="checkbox"                                
                                   @Html.Raw(permisosTOP >= 0 ? "checked=\"checked\"" : "")
                                   name="checkAdministradorTOP" />

                            <label class="custom-control-label"
                                   for="checkAdministradorTOP">
                                   @Html.GetText("COMADMIN", "ADMINISTRADOR")
                            </label> 
                        </div>
                    </div>
                </td>
                @* Columna de Acciones para permisos a grupos específicos *@
                <td>                    
                </td>
            </tr>
        }

        @* Fila para Plantilla DocumentacionSemantica *@
        @if (Model.PermisosDocumentacionSemantica != null && Model.PermisosDocumentacionSemantica.Count > 0)
        {
            <tr id="Semantico" class="permiso">
                @{
                    int permisosSemantico = -1;
                    if (Model.PermisosDocumentacion.Count(permiso => permiso.TipoDocumento == TiposDocumentacion.Semantico) > 0)
                    {
                        permisosSemantico = Model.PermisosDocumentacion.First(permiso => permiso.TipoDocumento == TiposDocumentacion.Semantico).TipoPermiso;
                    }
                }
                @* Referencia a Semántico *@
                <td>@Html.GetText("ADMINISTRACIONSEMANTICA","OBJETOSDECONOCIMIENTO")</td>
                <td>
                    <div class="check-wrapper">
                        <div class="custom-control custom-checkbox">
                            <input id="checkUsuarioPlantilla"
                                   class="chkUsu custom-control-input"
                                   type="checkbox" 
                                   @Html.Raw(permisosSemantico == 2 ? "checked=\"checked\"" : "")
                                   name="checkUsuarioPlantilla" />

                            <label class="custom-control-label"
                                   for="checkUsuarioPlantilla">
                                   @Html.GetText("COMADMIN", "USUARIO")
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input id="checkSupervisorPlantilla"
                                   class="chkSup custom-control-input"
                                   type="checkbox" 
                                   @Html.Raw(permisosSemantico >= 1 ? "checked=\"checked\"" : "")
                                   name="checkSupervisorPlantilla" />

                            <label class="custom-control-label"
                                   for="checkSupervisorPlantilla">
                                   @Html.GetText("COMADMIN", "SUPERVISOR")
                            </label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input id="checkAdministradorPlantilla"
                                   class="chkAdm custom-control-input"
                                   type="checkbox"                                
                                   @Html.Raw(permisosSemantico >= 0 ? "checked=\"checked\"" : "")
                                   name="checkAdministradorPlantilla" />

                            <label class="custom-control-label"
                                   for="checkAdministradorPlantilla">
                                   @Html.GetText("COMADMIN", "ADMINISTRADOR")
                            </label> 
                        </div>
                    </div>
                </td>
                @* Columna de Acciones para permisos a grupos específicos *@
                <td>                    
                </td>
            </tr>
            @* Fila para Seleccionar las diferentes Plantillas semánticas *@
            if (Model.PermisosDocumentacionSemantica.Count > 0)
            {
                <tr>
                    @{
                        int numOntologias = Model.PermisosDocumentacionSemantica.Count;
                        bool seleccionarTodosUsuario = (permisosSemantico >= 2 && Model.PermisosDocumentacionSemantica.Count(p => p.TipoPermiso >= 2) == numOntologias);
                        bool seleccionarTodosSupervisor = (permisosSemantico >= 1 && Model.PermisosDocumentacionSemantica.Count(p => p.TipoPermiso >= 1) == numOntologias);
                        bool seleccionarTodosAdministrador = (permisosSemantico >= 0 && Model.PermisosDocumentacionSemantica.Count(p => p.TipoPermiso >= 0) == numOntologias);
                    }
                    @* Referencia a Seleccionar Todos a partir de una plantilla *@
                    <td><span class="font-weight-bold ml-3">@Html.GetText("COMMON", "SELECCIONARTODOS")</span></td>
                    <td>
                        <div class="check-wrapper">
                            <div class="custom-control custom-checkbox">
                                <input id="chkOntoUsu_todos"
                                       class="chkUsu custom-control-input"
                                       type="checkbox" 
                                       @Html.Raw(seleccionarTodosUsuario ? "checked=\"checked\"" : "") @Html.Raw(permisosSemantico < 2 ? "disabled" : "")
                                       name="chkOntoUsu_todos" />

                                <label class="custom-control-label"
                                       for="chkOntoUsu_todos">
                                       @Html.GetText("COMADMIN", "USUARIO")
                                </label>

                            </div>
                            <div class="custom-control custom-checkbox">
                                <input id="chkOntoSup_todos"
                                       class="chkSup custom-control-input"
                                       type="checkbox" 
                                       @Html.Raw(seleccionarTodosSupervisor ? "checked=\"checked\"" : "") @Html.Raw(permisosSemantico < 1 ? "disabled" : "")
                                       name="chkOntoSup_todos" />

                                <label class="custom-control-label"
                                       for="chkOntoSup_todos">
                                       @Html.GetText("COMADMIN", "SUPERVISOR")
                                </label>
                            </div>
                            <div class="custom-control custom-checkbox">
                                <input id="chkOntoAdm_todos"
                                       class="chkAdm custom-control-input"
                                       type="checkbox"                                
                                       @Html.Raw(seleccionarTodosAdministrador ? "checked=\"checked\"" : "") @Html.Raw(permisosSemantico < 0 ? "disabled" : "")
                                       name="chkOntoAdm_todos" />

                                <label class="custom-control-label"
                                       for="chkOntoAdm_todos">
                                       @Html.GetText("COMADMIN", "ADMINISTRADOR")
                                </label>
                            </div>
                        </div>
                    </td>
                    @* Columna de Acciones para permisos a grupos específicos *@
                    <td>                    
                    </td>
                </tr>
                
                @* Lista las diferentes plantillas semánticas *@
                foreach (AdministrarComunidadUtilidades.PermisoDocumentacionSemantica permisoOnto in Model.PermisosDocumentacionSemantica)
                {
                    if(!secundariasPintadas && permisoOnto.EsSecundaria)
                    {
                        secundariasPintadas = true;
                        <tr>
                            <td>@Html.GetText("COMADMINCOMUNIDAD","ADMINENTSECUND")</td>
                            <td></td>
                            <td></td>
                        </tr>
                    }
                    string txtOntologia = permisoOnto.Ontologia.Replace(".owl", "");
                    int permisosOnto = permisoOnto.TipoPermiso;
                    <tr class="permisoOnto" id="@txtOntologia">
                        @* Nombre de cada Plantilla semántica en el idioma correspondiente del usuario *@
                        <td><span class="ml-3 nameOnto">@Html.ObtenerTextoIdiomaUsuario(permisoOnto.TipoDocumento)</span></td>
                        <td>
                            <div class="check-wrapper">
                                <div class="custom-control custom-checkbox">
                                    <input id="chkOntoUsu_@txtOntologia"
                                           class="chkUsu chkOntoUsu custom-control-input"
                                           type="checkbox" 
                                           @Html.Raw(permisosOnto >= 2 && permisosSemantico >= 2 ? "checked=\"checked\"" : "") @Html.Raw(permisosSemantico < 2 ? "disabled" : "")
                                           name="chkOntoUsu_@txtOntologia" />

                                    <label class="custom-control-label"
                                           for="chkOntoUsu_@txtOntologia">
                                           @Html.GetText("COMADMIN", "USUARIO")
                                    </label>
                                </div>
                                <div class="custom-control custom-checkbox">
                                    <input id="chkOntoSup_@txtOntologia"
                                           class="chkSup chkOntoSup custom-control-input"
                                           type="checkbox" 
                                           @Html.Raw(permisosOnto >= 1 && permisosSemantico >= 1 ? "checked=\"checked\"" : "") @Html.Raw(permisosSemantico < 1 ? "disabled" : "")
                                           name="chkOntoSup_@txtOntologia" />

                                    <label class="custom-control-label"
                                           for="chkOntoSup_@txtOntologia">
                                           @Html.GetText("COMADMIN", "SUPERVISOR")
                                    </label>                                    

                                </div>
                                <div class="custom-control custom-checkbox">
                                    <input id="chkOntoAdm_@txtOntologia"
                                           class="chkAdm chkOntoAdm custom-control-input"
                                           type="checkbox"                                
                                           @Html.Raw(permisosOnto >= 0 && permisosSemantico >= 0 ? "checked=\"checked\"" : "") @Html.Raw(permisosSemantico < 0 ? "disabled" : "")
                                           name="chkOntoAdm_@txtOntologia" />

                                    <label class="custom-control-label"
                                           for="chkOntoAdm_@txtOntologia">
                                           @Html.GetText("COMADMIN", "ADMINISTRADOR")
                                    </label>
                                </div>
                            </div>
                        </td>
                        @* Columna de Acciones para permisos a grupos específicos *@
                        <td class="celdaBuscarGrupos">   
                            @*Input para buscar para grupos*@                            
                            @* Campo oculto de grupos + información de los grupos asociada a la plantilla *@
                            @{
                                string listaIDsGrupos = "";
                                string htmlNombresGrupos = "";

                                @*Construir los ids y nombres de los grupos para asignarlos al botón en caso de desear Editar grupos *@
                                foreach (Guid grupoID in permisoOnto.PrivacidadGrupos.Keys)
                                {
                                    // ID de los grupos actuales
                                    listaIDsGrupos += "g_" + grupoID.ToString() + ",";                                    
                                    // Nombre de los grupos actuales
                                    htmlNombresGrupos += permisoOnto.PrivacidadGrupos[grupoID] + ",";                                   
                                }
                                // Quitar la última coma de ambos listados para evitar problemas                                                                  
                                listaIDsGrupos = listaIDsGrupos.TrimEnd(',');
                                htmlNombresGrupos = htmlNombresGrupos.TrimEnd(',');

                            }
                            
                            @* Contenedor de los grupos seleccionados *@
                            <div class="contenedorGrupos @Html.Raw(permisosOnto >= 2 && permisosSemantico >= 2 ? "d-none" : "")">                                
                                @* Botón para Añadir grupos *@
                                <ul class="no-list-style" class=" @Html.Raw(permisoOnto.PrivacidadGrupos.Count > 0 ? "d-none" : "") ">
                                    <li>    
                                        @* Input oculto para guardar los grupos seleccionados *@
                                        <input type="hidden" id="filtroGrupos_@(txtOntologia)_Hack" class="valores privacidadGrupos" name="filtroGruposValores" value="@listaIDsGrupos">                                        
                                        <a class="lnkVerGruposOnto btn texto-gris-claro"                                            
                                           onclick="getVistaFromUrl('@urlModalAddGroups','modal-dinamic-content', '')"                                           
                                           data-target="#modal-container"
                                           data-inputhack = "filtroGrupos_@(txtOntologia)_Hack"
                                           data-idgroups = "@listaIDsGrupos"
                                           data-groupnames = "@htmlNombresGrupos"
                                           data-toggle="modal">

                                           @* Comprobar si hay grupos para Editar o Añadir *@
                                            @{
                                                if (String.IsNullOrEmpty(listaIDsGrupos))
                                                {
                                                    <span class="material-icons">group_add</span>
                                                    <span class="texto">@Html.GetText("DEVTOOLS","AÑADIRAGRUPOS")</span>
                                                }
                                                else{
                                                    <span class="material-icons">edit</span>
                                                    <span class="texto">@Html.GetText("DEVTOOLS","EDITARGRUPOS")</span>
                                                }
                                            } 
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            }
        }
    </tbody>
</table>