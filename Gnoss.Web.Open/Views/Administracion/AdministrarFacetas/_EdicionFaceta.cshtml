@model FacetaModel

@*
Descripción
-----------------------------------------------
Vista para administrar/visualizar cada una de las filas o rows de las facetas existentes en la comunidad. Contendrá también el modal para su visualización en detalle.

Variables
----------------------------------------------------------------
*@
@{

	// Id temporal de la faceta por si no tiene
	Guid idTemp = Guid.NewGuid();
	@* Controlar el id de la Faceta *@
	if (Model.AgrupacionID.HasValue)
	{
		idTemp = Model.AgrupacionID.Value;
	}  

	// Nombre del tipo de faceta
	string nombreTipoFaceta = "";
	// Cabecera para obtención de idiomas de la Comunidad
	HeaderModel cabecera = Html.GetCabecera();
	// Diccionario de nombre de la faceta para multiIdiomas
	Dictionary<string, string> pageNameDictionary = new Dictionary<string, string>();
	// Id para la llamada al modal para edición de la faceta
	string idModalFaceta = "modal-configuracion-faceta_" + idTemp;
	string idModalMoveFaceta = "modal-move-faceta";
	// Idioma por defecto de la comunidad
	string idiomaPorDefecto = ViewBag.IdiomaPorDefecto;
	// Id autogenerado o correspondiente a AgrupacionID
	ViewBag.idTemp = idTemp;
}

@{
	@* Controlar el tipo de Faceta *@
    switch (Model.Type)
    {
        case TipoFaceta.Texto:
            nombreTipoFaceta = @Html.GetText("DEVTOOLS","TEXTO");
            break;
        case TipoFaceta.Numero:
            nombreTipoFaceta = @Html.GetText("DEVTOOLS","NUMERO");
            break;
        case TipoFaceta.Fecha:
            nombreTipoFaceta = @Html.GetText("DEVTOOLS","FECHA");
            break;
        case TipoFaceta.Tesauro:
            nombreTipoFaceta = @Html.GetText("DEVTOOLS","TESAURO");
            break;
        case TipoFaceta.TextoInvariable:
            nombreTipoFaceta = @Html.GetText("DEVTOOLS","TEXTOINVARIABLE");
            break;
		case TipoFaceta.Siglo:
			nombreTipoFaceta = @Html.GetText("DEVTOOLS", "SIGLO");
			break;
    }
}

@* Construir los diferentes items en idiomas (Nombre) *@
@{
	// Obtener el nombre formato diccionario con los multiIdiomas de Nombre para ser mostrados en la row de la faceta
	pageNameDictionary = Html.GetDictionaryValuesFromMultiLanguageItem(Model.Name);	
}

<li class="component-wrap faceta-row" data-facetkey="@idTemp" id="@idTemp" data-name="@Html.ObtenerTextoDeIdioma(Model.Name)" data-value="@Model.ClaveFaceta">
	<div class="component">
		<div class="component-header-wrap">
			<div class="component-header">
				@* Icono para arrastrar faceta *@
				<div class="component-sortable js-component-sortable-faceta">
					<span class="material-icons-outlined sortable-icon">drag_handle</span>
				</div>
				<div class="component-header-content">
					<div class="component-header-left">						
						
						@*<div class="component-name-wrap">							
							
																			
							@if (pageNameDictionary.Count == 0)
							{
								<span class="language-component component-name @(idiomaPorDefecto)" data-languageitem="@idiomaPorDefecto">
									@Model.Name
								</span>
							}
							else
							{														
								@foreach (KeyValuePair<string, string> idioma in cabecera.Languajes)
									{																												
									<span class="language-component component-name @( idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key">																	
																													
										@{
											string value = "";
											if (pageNameDictionary.TryGetValue(idioma.Key, out value))
											{
												@value;
											}										
										}
									</span>
								}	
							}								
						</div>
						*@
						@* Nombre de la faceta *@
						<div class="component-name-wrap">
							@foreach (KeyValuePair<string, string> idioma in cabecera.Languajes)
							{
								<span class="language-component component-name @( idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key">
									@* Asegurarnos de que haya valor en el dictionary. Si no, dejarlo en blanco *@
									@{
										string value = "";
										if (pageNameDictionary.TryGetValue(idioma.Key, out value))
										{
											@value;
										}
									}
								</span>
							}
						</div>																				
						
						@* Tipo de faceta *@
						<div class="component-tipo-wrap">							
							<span class="component-tipo">								
								@nombreTipoFaceta
							</span>
							
						</div>
						@* Faceta *@
						<div class="component-faceta-wrap">
							<span class="component-faceta">
								@Model.ClaveFaceta
							</span>
						</div>
					</div>
					@*Sección de acciones de la faceta *@
					<div class="component-header-right">
						<div class="component-actions-wrap">
							@* Botón dropdown de acciones *@
							<div class="dropdown">
								<a
									class="nav-link dropdown-toggle btn btn-outline-grey"
									data-toggle="dropdown"
									href="#"
									role="button"
									aria-haspopup="true"
									aria-expanded="false">
									<span class="material-icons">create</span>
									<span class="texto">@Html.GetText("COMMON","EDITAR")</span>
								</a>
								@* Panel dropdown con las acciones disponibles *@
								<div class="dropdown-menu dropdown-menu-left basic-dropdown">
									<ul class="no-list-style">
										@* Editar faceta *@
										<li>
											<a class="item-dropdown js-action-edit-component btnEditFaceta"
											   data-toggle="modal" 
											   data-target="#@idModalFaceta">
												<span class="material-icons">create</span>
												<span class="texto">Editar faceta</span>
											</a>
										</li>

										@* Mover faceta *@
										<li>
											<a class="item-dropdown js-action-edit-component btnMoveFaceta"
											   data-toggle="modal"
											   data-target="#@idModalMoveFaceta">
												<span class="material-icons">move_up</span>
												<span class="texto">
													@Html.GetText("DEVTOOLS","MOVERFACETA")
												</span>
											</a>
										</li>

										@* Eliminar faceta *@
										<li>
											<a class="item-dropdown js-action-delete-component btnDeleteFaceta"
											   data-toggle="modal" 
											   data-target="#modal-delete-faceta">
												<span class="material-icons">delete</span>
												<span class="texto">@Html.GetText("COMMON", "ELIMINAR")</span>
											</a>
										</li>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>


	@* Información detallada de la faceta -> Modal *@
	@Html.PartialView("_modal-views/_faceta-item-detail", Model)

</li>

