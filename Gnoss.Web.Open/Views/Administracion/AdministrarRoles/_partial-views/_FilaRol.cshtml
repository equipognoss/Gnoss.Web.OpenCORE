@model RolModel
@{
    HeaderModel cabecera = Html.GetCabecera();
    string idiomaPorDefecto = ViewBag.IdiomaPorDefecto;
    string verRolID = $"verRol_{Model.RolID}";
    string editarRolID = $"editarRol_{Model.RolID}";
    string eliminarRolID = $"eliminarRol_{Model.RolID}";

    // Diccionario para los campos multiidioma
    Dictionary<string, string> roleDescriptionDictionary = Html.GetDictionaryValuesFromMultiLanguageItem(Model.Descripcion);
    Dictionary<string, string> roleNameDictionary = Html.GetDictionaryValuesFromMultiLanguageItem(Model.Nombre);
}

<li class="component-wrap rol-row" id="@Model.RolID">
    <div class="component">
        <div class="component-header-wrap">
            <div class="component-header">
                <div class="component-header-content">
                    <div class="component-header-left">
                        @* Nombre *@
                        <div class="component-nombre-wrap component-w-20">
                            @if (roleNameDictionary.Count == 0)
                            {
                                <span class="language-component component-name @(idiomaPorDefecto)" data-languageitem="@idiomaPorDefecto" title="@Model.Nombre">@Model.Nombre</span>
                            }
                            else
                            {
                                @foreach (KeyValuePair<string, string> idioma in cabecera.Languajes)
                                {
                                    string value = "";
                                    if (roleNameDictionary.TryGetValue(idioma.Key, out value))
                                    {
                                        <span class="language-component component-name @(idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key" title="@value">
                                            @value
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="language-component component-name @(idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key">
                                            -
                                        </span>
                                    }
                                }
                            }
                        </div>
                        @* Descripción *@
                        <div class="component-descripcion-wrap component-w-60">
                            @if (roleDescriptionDictionary.Count == 0)
                            {
                                <span class="language-component component-descripcion @(idiomaPorDefecto)" data-languageitem="@idiomaPorDefecto" title="@Model.Descripcion">@Model.Descripcion</span>
                            }
                            else
                            {
                                @foreach (KeyValuePair<string, string> idioma in cabecera.Languajes)
                                {
                                    string value = "";
                                    if (roleDescriptionDictionary.TryGetValue(idioma.Key, out value))
                                    {
                                        <span class="language-component component-descripcion @(idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key" title="@value">
                                            @value
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="language-component component-descripcion @(idiomaPorDefecto == idioma.Key ? " " : "d-none")" data-languageitem="@idioma.Key">
                                            -
                                        </span>
                                    }
                                }
                            }
                        </div>
                        @* Ámbito: *@
                        <div class="component-tipo-wrap component-w-15">
                            <span class="component-tipo">@(Model.Tipo == 0 ? Html.GetText("DEVTOOLS", "TIPOROLCOMUNIDAD") : Html.GetText("DEVTOOLS", "TIPOROLECOSISTEMA"))</span>
                        </div>
                        @* Fecha: *@
                        <div class="component-fecha-wrap component-w-15">
                            <span class="component-fecha">@Model.FechaModificacion</span>
                        </div>
                    </div>
                    @* Sección de acciones *@
                    <div class="component-header-right">
                        <div class="component-actions-wrap">
                            @* Botón dropdown de acciones *@
                            <div class="dropdown">
                                <a class="nav-link dropdown-toggle btn btn-outline-grey"
                                   data-toggle="dropdown"
                                   href="#"
                                   role="button"
                                   aria-haspopup="true"
                                   aria-expanded="false">
                                    <span class="material-icons">more_vert</span>
                                </a>
                                @* Panel dropdown con las acciones disponibles *@
                                <div class="dropdown-menu basic-dropdown dropdown-icons dropdown-menu-right">
                                    @* Acción Ver *@
                                    <a class="item-dropdown btnVerRol" id="@verRolID" data-toggle="modal" data-target="#modal-ver-roles" aria-haspopup="true" aria-expanded="true">
                                        <span class="material-icons">visibility</span>
                                        <span class="texto">@Html.GetText("DEVTOOLS", "VER")</span>
                                    </a>
                                    @* Acción Editar *@
                                    @if (Model.Editable)
                                    {
                                        <a class="item-dropdown btnEditarRol" id="@editarRolID" data-toggle="modal" data-target="#modal-editar-rol" aria-haspopup="true" aria-expanded="true">
                                            <span class="material-icons">edit</span>
                                            <span class="texto">@Html.GetText("COMMON", "EDITAR")</span>
                                        </a>
                                    }
                                    @if (Model.Borrable)
                                    {
                                        @* Acción Borrar *@
                                        <a class="item-dropdown btnEliminarRol" id="@eliminarRolID" data-toggle="modal" data-target="#modal-container" aria-haspopup="true" aria-expanded="true">
                                            <span class="material-icons">delete</span>
                                            <span class="texto">@Html.GetText("DEVTOOLS", "BORRAR")</span>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</li>