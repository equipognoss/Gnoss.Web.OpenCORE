@model AdministrarComunidadGeneralModel

@*
Descripción
-----------------------------------------------
Vista para administrar la sección de Información General de la Comunidad mediante DevTools.

Variables
----------------------------------------------------------------
*@
@using Microsoft.AspNetCore.Http
@{
    CommunityModel Comunidad = Html.GetComunidad();
    Layout = "~/Views/Shared/Layout/_Layout_Admin.cshtml";
    // Carga de idiomas de la plataforma
    string idiomas = "";
    // Tipo de acceso a la comunidad (String y Value)
    var tipoAccesoComunidadValue = (short)Comunidad.AccessType;
    var tipoAccesoComunidadString = ((TipoAcceso)((short)Comunidad.AccessType));         
    @* Mostrar icono de tipo de comunidad *@                                
    string communityIconType = Html.getCommunityIconType(Comunidad);         
    @* Información y descripción de textos idiomas *@
    string urlAdminCat = Comunidad.Url + "/" + Html.GetText("URLSEM", "ADMINISTRARCATEGORIASCOM");
    string urlAdminGadgets = Comunidad.Url + "/" + Html.GetText("URLSEM", "ADMINISTRARCONTEXTOSCOM");      
    // ID del contenedor donde estarán todos los Tags (lógica Js)
    string idTagsContainer = "tagsContainer";
    // ID del inputHack de Tags
    string idTxtTags = "txtTags_Hack";
    // Id para los tabs multiIdioma para su correcta visualización al cambiar para ver otros idiomas
    string multiIdiomaTabId = @Guid.NewGuid().ToString().Substring(0,5);    
}


@{
    @* Carga de idiomas *@
    foreach (string idiomaKey in Model.ListaIdiomas.Keys)
    {
        idiomas += idiomaKey + "|" + Model.ListaIdiomas[idiomaKey] + "&&&";
    }     
}

@*
----------------------------------------------------------------
-------------------- Vista para Administrar la información general de la comunidad --------------------
*@
@if (Comunidad.IntegracionContinuaActivada)
{
    <div class="alert alert-warning alert-dismissable">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <span class="material-icons" alt="warning" title="warning" aria-label="warning">
            warning
        </span>
        <strong>@Html.GetText("DEVTOOLS", "NOGUARDAINTEGRACIONCONTINUA")</strong>
    </div>
}
<input type="hidden" id="idiomasComunidad" value="@idiomas" />
<input type="hidden" value="@Model.IdiomaPorDefecto" id="idiomaDefecto"/>
<input type="text" style="display: none" id="txtHayCambios" name="txtHayCambios"/>

@* Contenedor central *@

    @* Migas de Pan *@
    <div class="col col-12 col-breadcrumb">
        <ul>
            <li>
                <a href="@Comunidad.Url/@Html.GetText("URLSEM", "ADMINISTRARCOMUNIDADHOME")">@Html.GetText("ADMINISTRACIONPAGINAS","HOME")</a>
            </li>
            <li>
                <a href="@Html.GetText("URLSEM", "ADMINISTRARCOMUNIDADSECTION")/comunidad">@Html.GetText("ADMINISTRACIONSEMANTICA","COMUNIDAD")</a>
            </li>
            <li>
                @Html.GetText("ADMINISTRACIONBASICA","INFORMACIONGENERAL")
            </li>
        </ul>

        @* Botón de documentación *@
        <div class="col-breadcrumb__documentation" style="display: flex; align-items: center;">    
            <button type="button" class="btn btn-light border rounded-pill shadow-sm mb-1" data-toggle="modal" data-target="#right_modal_lg">
                <span class="material-icons texto-primario documentation__icon" data-toggle="modal" data-target="#right_modal_lg" style="cursor:pointer">description</span>
                <span class="documentation__text" style="font-weight: 300;">Documentación</span>
            </button>
        </div>
    </div>

    @* Contenido Central *@
    <div class="formulario-edicion background-blanco">

        @* Descripción de la sección *@
        <div class="headerContainer">            
            <h2>@Html.GetText("ADMINISTRACIONBASICA","INFORMACIONGENERAL")</h2>
        </div>
        
        <p>@Html.GetText("DEVTOOLS","ESTABLECERELESTADODELACOMUNIDAD,SUNOMBRE,ELACCESOALAMISMAYSU")</p>
       
        @* Sección de Estado de la Comunidad *@
        <h3>@Html.GetText("COMADMIN", "ESTADO")</h3>  
        <div id="panelEstadoComunidadContenedor">
            @Html.PartialView("EstadoComunidad", Model.State)
        </div>        
        
        @* Sección de Información de la Comunidad *@
        <h3>@Html.GetText("DEVTOOLS","INFORMACION")</h3>
        @* Nombre corto de la comunidad *@
        <div class="form-group mb-3">
            <label class="control-label d-block">@Html.GetText("SOLICITARCOMUNIDAD","NOMBRECORTO")</label>
            <span id="lblNombreCortoComunidad" class="texto-seleccionado"
                  data-shortname="@Comunidad.ShortName">
                  @Comunidad.ShortName
            </span>
            @* Botón para cambiar nombre corto de la comunidad *@
            <a id="btnCambiarNombreCortoComunidad" 
               class="btn btn-outline-secondary" 
               data-target="#modal-rename-community" 
               data-toggle="modal" 
               style="cursor:pointer">
               @Html.GetText("DEVTOOLS","CAMBIARNOMBRECORTO")
           </a>          
        </div>

        @* Tipo de acceso de la comunidad *@
        <div class="form-group mb-3">
            <label class="control-label d-block">Tipo de acceso</label>
            <div class="d-flex align-items-center">
                <span class="tipo-comunidad">
                    <span id="iconTipoAcceso" class="material-icons" data-tipoaccesocomunidadicono="@communityIconType">@communityIconType</span>
                    <span id="txtTipoAcceso" data-tipoaccesovalue="@tipoAccesoComunidadValue" data-tipoaccesocomunidad="@tipoAccesoComunidadString">@tipoAccesoComunidadString</span>
                </span>                                
                <a id="btnCambiarTipoComunidad" class="btn btn-outline-secondary" 
                   data-target="#modal-change-community-type" 
                   data-toggle="modal" 
                   style="cursor:pointer">
                   @Html.GetText("DEVTOOLS","CAMBIARTIPO")
               </a> 
            </div>
        </div>

        @* URL de Dominio *@
        <div class="form-group mb-3">
        <label class="control-label d-block">@Html.GetText("DEVTOOLS", "URLDEDOMINIO")</label>
            <span id="lblUrlDominio" class="texto-seleccionado"
              data-domainurl="@Model.Url">
            @Model.Url
            </span>
            @* Botón para cambiar nombre corto de la comunidad *@
            <a id="btnCambiarUrlDominio" 
               class="btn btn-outline-secondary" 
               data-target="#modal-change-domain-url" 
               data-toggle="modal" 
               style="cursor:pointer">
               @Html.GetText("DEVTOOLS", "URLDEDOMINIO")
           </a>          
        </div>

        @* Nombre y Descripción de la Comunidad (Tabs con traducciones) *@
        <div id="panContenidoMultiIdioma" class="contenido-multiIdioma panContenidoMultiIdioma">            
            @* Tabs de traducciones *@                       
        </div>

        <div class="inputsMultiIdioma multiIdiomaContainer" data-idmultiidiomatab="navigation_@multiIdiomaTabId">            
            @* Inputs ocultos para traducciones *@                              
            <div class="form-group mb-3">
                @* Al ser por idiomas se genera dinámicamente *@
                @*<label class="control-label d-block">Nombre de la comunidad</label>*@
                <input type="text" 
                       id="txtNombre" 
                       data-labeltext = "Nombre de la comunidad"
                       class="form-control not-outline multiIdioma"
                       value="@Model.Name" 
                       name="txtNombre"                                
                       placeholder="Introduce el nombre de la comunidad"/>                                                    
            </div>
            <div class="form-group mb-3">
                @* Al ser por idiomas se genera dinámicamente *@
                @* <label class="control-label d-block">Descripción</label> *@
                <textarea id="txtDescripcion" rows="6" name="txtDescripcion" class="multiIdioma" data-labeltext = "Descripción">@Model.Desciption</textarea>                        
            </div>
        </div>


        @* Sección imágenes de la comunidad *@
        <div id="panelImagenCabecera">
            @Html.PartialView("ImagenCabecera", Model.ImageHead)
        </div>

        @* Sección favicon de la comunidad - PENDIENTE IMPLEMENTACIÓN EN CORE - LA OCULTO DE MOMENTO 
        <div id="panelImagenFavicon">
            @Html.PartialView("ImagenFavicon", Model.ImageHead)
        </div>
        *@
        

        @* Sección etiquetas de la comunidad *@
        <h3>@Html.GetText("COMMON", "ETIQUETAS")</h3>
        <p>@Html.GetText("COMADMIN", "EXPLICACIONTAGSYCATEGORIAS", Html.GetNombreProyectoEcosistema())</p>
        @* Contenedor con input para añadir etiquetas a la comunidad *@
        <div class="form-group mb-3 edit-etiquetas">
            <label id="lblEtiquetas" for="txtTags" class="control-label d-block">@Html.GetText("PERFILBASESUBIRRECURSO", "ETIQUETAS")</label>
            <div class="autocompletar-tags form-group">
                <div class="input-wrap form-sticky-button autocompletar" onclick="$('#txtTags').focus();">
                    @* Input de Tags *@
                    <input type="text"
                            placeholder="@Html.GetText("COMMON","INTRODUCEUNAETIQUETAYPULSAAÑADIR")"
                            id="txtTags"
                            class="form-control txtAutocomplete"
                            value="@Model.Tags"
                            autocomplete="off" />

                    @* Botón de Añadir Etiqueta/Tag *@
                    <a id="anadir-tag" class="btn btn-grey uppercase">@Html.GetText("ADMINISTRACIONBASICA","AÑADIR")</a>

                    @* Campo oculto que almacenará los Tags del recurso *@
                    <input type="hidden" id="@idTxtTags" />
                </div>
                @* Tags añadidas por el usuario o por auto *@
                <span id="@idTagsContainer" class="contenedor tag-list mb-4"></span>
            </div>
        </div>

        @* Sección Categorías *@
        <h3>@Html.GetText("COMADMIN", "ADMINCATEGORIAS")</h3>
        <p>@Html.GetText("DEVTOOLS", "DINOSENQUECATEGORIASDELINDICEGLOBALDEGNOSSQUIERESQUEENCUENTR")</p>
        <div id="divSelCatTesauro" class="form-group mb-3">
        @foreach (CategoryModel categoria in Model.EcosistemaCategories.Where(cat => cat.ParentCategoryKey.Equals(Guid.Empty)).OrderBy(cat => cat.Order))
        {
            @Html.PartialView("EditorTesauro/_PintarCategoria_AdminCom", categoria);
        }
        </div>

        @* Sección Idioma - MultiIdioma *@
        <h3>@Html.GetText("COMMON", "IDIOMA")</h3>
        <p>@Html.Raw(Html.GetText("COMADMIN", "DESCRIPCIONIDIOMACOMUNIDAD", urlAdminCat, urlAdminGadgets, Html.GetNombreProyectoEcosistema()))</p>
        @* Input que guardará los datos para el formulario *@
        <input name="chkIdioma" id="chkIdioma" 
               type="checkbox"
               class="d-none" 
               @Html.Raw(Model.HasMultiLanguageObjects?"disabled=\"disabled\"":"") @Html.Raw(Model.MultiLanguage? "checked=\"checked\"" : "")/>               
        
        <div class="form-group mb-3 edit-idioma">
            <label class="control-label d-block">Activar edición multi-idioma</label>
            <div class="form-check form-check-inline">                
                <input class="form-check-input"
                type="radio" 
                name="chkIdioma" 
                id="comunidad-traducciones-si"
                @Html.Raw(Model.MultiLanguage? "checked=\"checked\"" : "") @* Es multilenguaje ?*@ 
                @Html.Raw(Model.HasMultiLanguageObjects?"disabled=\"disabled\"":"") @* Tiene Objetos multilenguaje? *@/>
                <label class="form-check-label" for="comunidad-traducciones-si">@Html.GetText("COMMON","SI")</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" 
                type="radio"
                name="chkIdioma"
                id="comunidad-traducciones-no"                
                @Html.Raw(!Model.MultiLanguage? "checked=\"checked\"" : "") @* Es multilenguaje ?*@ 
                @Html.Raw(Model.HasMultiLanguageObjects?"disabled=\"disabled\"":"") @* Tiene Objetos multilenguaje? *@/>
                                
                <label class="form-check-label" for="comunidad-traducciones-no">@Html.GetText("COMMON","NO")</label>
            </div>
        </div>
        <div class="form-group mb-3">
            <label for="ddlIdioma" class="control-label d-block">@Html.GetText("COMMON", "IDIOMA")</label>                 
            <select id="ddlIdioma"
                name="ddlIdioma"
                class="js-select2"
                data-select-search="true"                
                @Html.Raw(!Model.MultiLanguage?"disabled=\"disabled\"":"")> @* No tiene multilenguaje ?*@ 
                @foreach (string idiomaKey in Model.ListaIdiomasPlataforma.Keys)
                {
                    <option value="@idiomaKey" @Html.Raw(idiomaKey.Equals(Model.IdiomaPorDefecto)?"selected=\"selected\"":"")>@Model.ListaIdiomasPlataforma[idiomaKey]</option>
                }
            </select>
        </div>

        @* Botón para guardado de datos *@
        <input id="btnGuardarInformacionGeneral" type="button" class="btn btn-primary uppercase" value="@Html.GetText("COMADMINPESTANYAS", "GUARDARTODO")" />        
    </div>


    @* Modal para cambiar tipo de comunidad *@    
    @Html.PartialView("_modal-views/_change-community-type", Model)
    @* Modal para cambiar el nombre corto de la comunidad *@    
    @Html.PartialView("_modal-views/_rename-short-community-name", Model)
    @* Modal para cambiar la url de dominio *@
    @Html.PartialView("_modal-views/_change-domain-url", Model)

    @* Modal de documentación de la sección *@
    @Html.PartialView("_modal-views/_documentation-section")    
    

@* Carga de operativa *@
@section operativaScript{
    <script type="text/javascript" src="@Html.GetBaseUrlStatic()/responsive/theme/logic/comunidad.js?v=@Html.GetVersion()"></script>
    <script type="text/javascript">

        (function ($) {
            // Operativa funcionamiento de Información General
            operativaInformacionGeneral.init();

            const pParamsTags = {
                idTagsContainer: "@idTagsContainer",
                idTagsInputHack: "@idTxtTags",
            }  
            // Gestión de operativa para funcionamiento de Edición de Tags
            operativaTagsEditable.init(pParamsTags);
        })();

        function mostrarOcultarCategorias(collapseButton) {
            const that = this;

            // Clase para indicar que se puede expandir o mostrar el panel
            const expandClassName = "expanded";
            const collapseClassName = "collapsed";
            const expandIcon = "add_circle_outline";
            const collapseIcon = "remove_circle_outline";
            
            // Buscar el panel children correspondiente al botón de expandir/contraer
            const tesauroRowItem = collapseButton.closest('.category-row');
            const panelCategoryChildrenItem = tesauroRowItem.querySelector('.categoryChildrenPanel');

            if (collapseButton.classList.contains(collapseClassName)) {
                // Expandir o Mostrar el panel children
                collapseButton.classList.remove(collapseClassName);
                collapseButton.classList.add(expandClassName);
                collapseButton.innerHTML = collapseIcon;  
                panelCategoryChildrenItem.classList.remove("d-none");          
            }else{            
                // Ocultar o colapsar el panel children
                collapseButton.classList.add(collapseClassName);
                collapseButton.classList.remove(expandClassName);
                collapseButton.innerHTML = expandIcon;
                panelCategoryChildrenItem.classList.add("d-none");
            }
        }
    </script>
}