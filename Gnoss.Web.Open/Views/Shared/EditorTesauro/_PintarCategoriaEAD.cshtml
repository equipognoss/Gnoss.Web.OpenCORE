@model PintarCategoriaEditorTesauro

@{
    bool esCategoriaCompartida = false;
    if (Model.thesaurusEditor.SharedCategories != null && Model.thesaurusEditor.SharedCategories.Contains(Model.categoryModel.Key))
    {
        esCategoriaCompartida = true;
    }
    <div @Html.Raw(esCategoriaCompartida ? "class=\"externo\"" : "")>
        @{
            bool tieneHijos = !esCategoriaCompartida && ((List<CategoryModel>)Model.thesaurusEditor.ThesaurusCategories).Count(cat => cat.ParentCategoryKey == Model.categoryModel.Key) > 0;
        }

        @if (tieneHijos)
        {
            string img = null;

            if (Model.thesaurusEditor.ExpandedCategories == null || !Model.thesaurusEditor.ExpandedCategories.Contains(Model.categoryModel.Key))
            {
                img = "verMas.gif";
            }
            else
            {
                img = "verMenos.gif";
            }

            <img style="border-width:0px;margin-right:5px;cursor:pointer;" src="@Html.GetBaseUrlStatic()/img/@img" onclick="javascript:MVCDesplegarTreeView(this);" />
        }
        else
        {
            <img style="border-width:0px;" src="@Html.GetBaseUrlStatic()/img/miniWhiteSpace.gif" />
        }
        <span class="@Model.categoryModel.Key" @Html.GetParam("rel", Model.categoryModel.StringKey)>
            @{
                string accionClick = "MarcarCatSelEditorTes(this);";
                string cadenaChecked = "";
                string cadenaDisabled = "";
                if (Model.thesaurusEditor.SelectedCategories.Contains(Model.categoryModel.Key))
                {
                    cadenaChecked = "checked=\"checked\"";
                }

                if (Model.thesaurusEditor.DisabledCategories != null && Model.thesaurusEditor.DisabledCategories.Contains(Model.categoryModel.Key))
                {
                    cadenaDisabled = "disabled=\"disabled\"";
                    accionClick = "";
                }
            }

            <input type="checkbox" onclick="@accionClick" @Html.Raw(cadenaChecked) @Html.Raw(cadenaDisabled) id="chk_arb_@Model.categoryModel.Key" />
            <label for="chk_arb_@Model.categoryModel.Key">@Model.categoryModel.Name</label>
        </span>
        @if (tieneHijos)
        {
            string display = "";

            if (Model.thesaurusEditor.ExpandedCategories == null || !Model.thesaurusEditor.ExpandedCategories.Contains(Model.categoryModel.Key))
            {
                display = "display:none;";
            }

            <div style="margin-left:15px;@display" class="panHijos">
                @foreach (CategoryModel categoria in ((List<CategoryModel>)Model.thesaurusEditor.ThesaurusCategories).Where(cat => cat.ParentCategoryKey == Model.categoryModel.Key).OrderBy(cat => cat.Order))
                {
                    PintarCategoriaEditorTesauro pintar = new PintarCategoriaEditorTesauro();
                    pintar.categoryModel = categoria;
                    pintar.thesaurusEditor = Model.thesaurusEditor;
                    @Html.PartialView("../Shared/EditorTesauro/_PintarCategoriaEAD", pintar)
                }
                @if (Model.thesaurusEditor.SuggestedThesaurusCategories != null)
                {
                    foreach (CategoryModel categoria in ((List<CategoryModel>)Model.thesaurusEditor.SuggestedThesaurusCategories).Where(cat => cat.ParentCategoryKey == Model.categoryModel.Key).OrderBy(cat => cat.Order))
                    {
                        PintarCategoriaEditorTesauro pintar = new PintarCategoriaEditorTesauro();
                        pintar.categoryModel = categoria;
                        pintar.thesaurusEditor = Model.thesaurusEditor;
                        @Html.PartialView("../Shared/EditorTesauro/_PintarCategoriaSugeridaEAD", pintar)
                    }
                }
            </div>
        }
    </div>

}

